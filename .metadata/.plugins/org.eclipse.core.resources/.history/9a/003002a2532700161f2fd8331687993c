=============================================================================
List of generated methods in project: varmo_lite

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "LED_DEBUG" (component BitIO)
   - LED_DEBUG_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - LED_DEBUG_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - LED_DEBUG_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.
   - LED_DEBUG_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if 
                the direction = _[output]_ or _[input/output]_.
   - LED_DEBUG_NegVal -Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.

Module "TU1"       (component TimerUnit_LDD)
   - TU1_Init -Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets 
                interrupt priority, sets pin routing, sets timing, etc. If the property <"Enable in init. code"> is set to 
                "yes" value then the device is also enabled (see the description of the <Enable> method). In this case the 
                <Enable> method is not necessary and needn't to be generated. This method can be called only once. Before the 
                second call of Init the <Deinit> must be called first.

Module "LED_STATUS_1" (component BitIO)
   - LED_STATUS_1_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read 
                and returned. If the direction is [output] then the last written value is returned (see <Safe mode> property 
                for limitations). This method cannot be disabled if direction is [input].
   - LED_STATUS_1_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - LED_STATUS_1_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - LED_STATUS_1_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.

Module "LED_STATUS_2" (component BitIO)
   - LED_STATUS_2_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read 
                and returned. If the direction is [output] then the last written value is returned (see <Safe mode> property 
                for limitations). This method cannot be disabled if direction is [input].
   - LED_STATUS_2_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - LED_STATUS_2_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - LED_STATUS_2_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.

Module "LED_STATUS_3" (component BitIO)
   - LED_STATUS_3_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read 
                and returned. If the direction is [output] then the last written value is returned (see <Safe mode> property 
                for limitations). This method cannot be disabled if direction is [input].
   - LED_STATUS_3_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - LED_STATUS_3_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - LED_STATUS_3_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.

Module "LED_STATUS_4" (component BitIO)
   - LED_STATUS_4_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read 
                and returned. If the direction is [output] then the last written value is returned (see <Safe mode> property 
                for limitations). This method cannot be disabled if direction is [input].
   - LED_STATUS_4_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - LED_STATUS_4_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - LED_STATUS_4_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.

Module "ENCODER"   (component GPIO_LDD)
   - ENCODER_Init -This method initializes the associated peripheral(s) and the component internal variables. The method is 
                called automatically as a part of the application initialization code.
   - ENCODER_GetEventMask -This method returns current events mask of the port.    Note: Event that are not generated (See the 
                "Events" tab in the Component inspector) are not handled by this method.   Pair method to SetEventMask().
   - ENCODER_GetPortEventStatus -Returns a set of asserted flags. The flags are accumulated in the set. After calling this 
                method the set is returned and cleared.   Note: Some type of "Port" device requires enabling "Interrupt 
                service/event" property for a pin edge detect function.
   - ENCODER_SetFieldValue -This method sets the output data value of the specified bit field.
   - ENCODER_GetFieldValue -This method returns the current input data of the specified field.
   - ENCODER_ClearFieldBits -This method drives the specified bits of the specified bit field to the inactive level.
   - ENCODER_SetFieldBits -This method drives the specified bits of the specified bit field to the active level.
   - ENCODER_ToggleFieldBits -This method inverts the specified bits of the specified bit field to other level.

Module "PUSH_BUTTON_SEND" (component GPIO_LDD)
   - PUSH_BUTTON_SEND_Init -This method initializes the associated peripheral(s) and the component internal variables. The 
                method is called automatically as a part of the application initialization code.
   - PUSH_BUTTON_SEND_SetFieldValue -This method sets the output data value of the specified bit field.
   - PUSH_BUTTON_SEND_GetFieldValue -This method returns the current input data of the specified field.
   - PUSH_BUTTON_SEND_ClearFieldBits -This method drives the specified bits of the specified bit field to the inactive level.
   - PUSH_BUTTON_SEND_SetFieldBits -This method drives the specified bits of the specified bit field to the active level.
   - PUSH_BUTTON_SEND_ToggleFieldBits -This method inverts the specified bits of the specified bit field to other level.

Module "PUSH_BUTTON_REC" (component GPIO_LDD)
   - PUSH_BUTTON_REC_Init -This method initializes the associated peripheral(s) and the component internal variables. The 
                method is called automatically as a part of the application initialization code.
   - PUSH_BUTTON_REC_SetFieldValue -This method sets the output data value of the specified bit field.
   - PUSH_BUTTON_REC_GetFieldValue -This method returns the current input data of the specified field.
   - PUSH_BUTTON_REC_ClearFieldBits -This method drives the specified bits of the specified bit field to the inactive level.
   - PUSH_BUTTON_REC_SetFieldBits -This method drives the specified bits of the specified bit field to the active level.
   - PUSH_BUTTON_REC_ToggleFieldBits -This method inverts the specified bits of the specified bit field to other level.

Module "DIRECTION" (component GPIO_LDD)
   - DIRECTION_Init -This method initializes the associated peripheral(s) and the component internal variables. The method is 
                called automatically as a part of the application initialization code.
   - DIRECTION_SetFieldValue -This method sets the output data value of the specified bit field.
   - DIRECTION_GetFieldValue -This method returns the current input data of the specified field.
   - DIRECTION_ClearFieldBits -This method drives the specified bits of the specified bit field to the inactive level.
   - DIRECTION_SetFieldBits -This method drives the specified bits of the specified bit field to the active level.
   - DIRECTION_ToggleFieldBits -This method inverts the specified bits of the specified bit field to other level.

Module "Cpu"       (component MK20DX256LH7)

===================================================================================
